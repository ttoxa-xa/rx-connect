{
  "_args": [
    [
      {
        "raw": "rx-connect@^0.7.0",
        "scope": null,
        "escapedName": "rx-connect",
        "name": "rx-connect",
        "rawSpec": "^0.7.0",
        "spec": ">=0.7.0 <0.8.0",
        "type": "range"
      },
      "/Users/savusha/planner-react-native"
    ]
  ],
  "_from": "rx-connect@>=0.7.0 <0.8.0",
  "_id": "rx-connect@0.7.0",
  "_inCache": true,
  "_location": "/rx-connect",
  "_nodeVersion": "6.11.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/rx-connect-0.7.0.tgz_1506324222542_0.5015878535341471"
  },
  "_npmUser": {
    "name": "bsideup",
    "email": "bsideup@gmail.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "rx-connect@^0.7.0",
    "scope": null,
    "escapedName": "rx-connect",
    "name": "rx-connect",
    "rawSpec": "^0.7.0",
    "spec": ">=0.7.0 <0.8.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/rx-connect/-/rx-connect-0.7.0.tgz",
  "_shasum": "4fbf67f9630b78ebee5338ba80aa0e52b2ce7e24",
  "_shrinkwrap": null,
  "_spec": "rx-connect@^0.7.0",
  "_where": "/Users/savusha/planner-react-native",
  "author": {
    "name": "Sergei Egorov",
    "email": "bsideup@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/bsideup/rx-connect/issues"
  },
  "dependencies": {
    "lodash.isarray": "^4.0.0",
    "lodash.isobject": "^3.0.2",
    "lodash.isplainobject": "^4.0.6",
    "symbol-observable": "^1.0.4"
  },
  "description": "Connect React components to Redux store with RxJS-based HOC",
  "devDependencies": {
    "babel-cli": "^6.22.2",
    "babel-core": "^6.22.1",
    "babel-eslint": "^7.1.1",
    "babel-jest": "^18.0.0",
    "babel-loader": "^6.2.10",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-plugin-transform-decorators-legacy": "^1.3.4",
    "babel-preset-es2015": "^6.22.0",
    "babel-preset-react": "^6.22.0",
    "babel-preset-stage-0": "^6.22.0",
    "cross-env": "^3.1.4",
    "eslint": "^3.15.0",
    "eslint-loader": "^1.6.1",
    "eslint-plugin-react": "^6.9.0",
    "gh-pages": "^0.12.0",
    "jest-cli": "^18.0.0",
    "react": "^15.4.2",
    "react-redux": "^5.0.2",
    "react-test-renderer": "^15.4.2",
    "redux": "^3.5.2",
    "rimraf": "^2.5.4",
    "rx": "^4.1.0",
    "rxjs": "^5.1.0",
    "webpack": "^2.2.1",
    "yargs": "^6.6.0"
  },
  "directories": {},
  "dist": {
    "shasum": "4fbf67f9630b78ebee5338ba80aa0e52b2ce7e24",
    "tarball": "https://registry.npmjs.org/rx-connect/-/rx-connect-0.7.0.tgz"
  },
  "gitHead": "d00a4fe4e81002e4db3cf3618d367c1ba88c590d",
  "homepage": "https://github.com/bsideup/rx-connect",
  "jest": {
    "collectCoverage": true,
    "collectCoverageFrom": [
      "src/*.js"
    ],
    "testPathDirs": [
      "src"
    ]
  },
  "keywords": [
    "redux",
    "react",
    "rx",
    "rxjs"
  ],
  "license": "MIT",
  "main": "./lib/index.js",
  "maintainers": [
    {
      "name": "bsideup",
      "email": "bsideup@gmail.com"
    }
  ],
  "name": "rx-connect",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^15.3.0",
    "rxjs": "^5.1.0"
  },
  "readme": "RxConnect\n========\n[![Gitter](https://badges.gitter.im/bsideup/rx-connect.svg)](https://gitter.im/bsideup/rx-connect)\n[![NPM version](https://img.shields.io/npm/v/rx-connect.svg)](https://npmjs.com/package/rx-connect)\n[![Build Status](https://travis-ci.org/bsideup/rx-connect.svg?branch=master)](https://travis-ci.org/bsideup/rx-connect)\n[![license](https://img.shields.io/github/license/bsideup/rx-connect.svg?maxAge=2592000)]()\n\nRxConnect is like [Redux](https://github.com/reactjs/redux)'s `@connect`, but with all the power of [RxJS](https://github.com/Reactive-Extensions/RxJS).\n\n```\nnpm install --save rx-connect\n```\n\n<!--remove-->\n## Documentation\nYou can find the latest documentation here: http://bsideup.gitbooks.io/rxconnect/content/\n<!--endremove-->\n\n## Why?\nReplace this:\n\n```javascript\nclass Timer extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            counter: 0\n        }\n    }\n\n    componentWillMount() {\n        this.intervalRef = setInterval(\n            () => this.setState(state => ({ counter: state.counter + 1 })),\n            1000\n        )\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.intervalRef)\n    }\n\n    render() {\n        return <div>{ this.state.counter }</div>\n    }\n}\n```\n\nwith this:\n\n```javascript\nimport { rxConnect } from \"rx-connect\";\n\n@rxConnect(\n    Rx.Observable.timer(0, 1000).timestamp()\n)\nclass Timer extends React.PureComponent {\n    render() {\n        return <div>{ this.props.value }</div>\n    }\n}\n```\n\n> **NB:** We use decorators, but it's not required. These two code blocks are completely identical:\n>\n> ```javascript\n> @rxConnect(...)\n> export class MyView extends React.Component {\n>     // ...\n> }\n> ```\n>\n> and\n>\n>  ```javascript\n> class MyView extends React.Component {\n>     // ...\n> }\n> export rxConnect(...)(MyView)\n> ```\n\n## Using RxJS 4?\n\nThis library supports RxJS 5 by default, but provides an adapter for RxJS 4:\n\n```js\nimport { rxConnect } from \"rx-connect\";\nimport rx4Adapter from \"rx-connect/lib/rx4Adapter\";\nrxConnect.adapter = rx4Adapter;\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "url": "git+ssh://git@github.com/bsideup/rx-connect.git",
    "type": "git"
  },
  "scripts": {
    "build": "npm run build:lib && npm run build:umd && npm run build:umd:min",
    "build:lib": "babel src --ignore __tests__ --out-dir lib",
    "build:umd": "cross-env NODE_ENV=development webpack src/index.js dist/rx-connect.js",
    "build:umd:min": "cross-env NODE_ENV=production webpack src/index.js dist/rx-connect.min.js",
    "clean": "rimraf lib dist",
    "examples:build": "npm run examples:build:blog && npm run examples:build:wikistream",
    "examples:build:blog": "cd examples/blog/ && cross-env NODE_ENV=production npm run build",
    "examples:build:wikistream": "cd examples/wikistream/ && cross-env NODE_ENV=production npm run build",
    "ghPages": "npm run examples:build && gh-pages -d . --src 'examples/*/dist/**'",
    "lint": "eslint src",
    "prepublish": "npm run clean && npm run test && npm run build",
    "test": "npm run lint && jest"
  },
  "version": "0.7.0"
}
